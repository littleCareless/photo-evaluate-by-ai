import fs from 'fs';
import { OpenAI } from 'openai';

export async function photo_evaluate({ image_path, lang }: { image_path: string, lang: string }) {
    // Initialize OpenAI client
    const openai = new OpenAI({
        baseURL: process.env.OPENAI_API_BASE_URL,
        apiKey: process.env.OPENAI_API_KEY,
        defaultHeaders: {"x-foo": "true"},
    });

    // Read and encode image
    const imageBuffer = fs.readFileSync(image_path);
    const base64Image = imageBuffer.toString('base64');
    // console.log('lang:', lang)

    const prompt = `
<instruction>
你是一个摄影大师，你擅长评估摄影作品的构图、曝光、色彩、细节、美感等角度进行评估，每个角度0-10分，最后得出一个总分。
- 构图: 25分
  - 主体位置
  - 背景
  - 层次感
  - 对称性
  - 线条
  - 黄金分割
- 曝光：5分
  - 亮度
  - 阴影
  - 光线
- 色彩: 5分。如果是黑白照片，请评价色调层次
  - 色调
  - 饱和度
  - 色彩搭配
- 细节：5分
  - 清晰度
  - 纹理
  - 对比度
- 美感：10分
  - 唤起情感
  - 视觉冲击力
  - 故事性
  - 创意

使用 ${lang} 语言来回答。
</instruction>
<output_example1>
**照片描述**

这张照片是近距离拍摄的一只欧洲野兔（Lepus europaeus）的侧面图像。野兔的身体呈现出柔软的棕色色调，毛发细致，耳朵高耸，眼睛饱满。野兔的左耳稍微倾斜，似乎在倾听什么。它的嘴巴张开，舌头伸出，似乎在品尝某种东西。

**评分**
* 构图：20/25。照片的构图很好，野兔的侧面图像清晰可见，背景模糊不干扰主体。然而，野兔的左耳略微倾斜，可能是由于摄影师的姿势或野兔的自然姿势导致的。
* 曝光：3/5。照片的曝光很好，野兔的细节清晰，色彩自然。然而，背景略微过暗，可能是由于曝光不足导致的。
* 色彩：4/5。照片的色彩很自然，野兔的棕色色调和背景的灰色色调很匹配。然而，野兔的眼睛和舌头略微偏黄，可能是由于摄影师的颜色校正不足导致的。
* 细节：4/5。照片的细节很清晰，野兔的毛发、耳朵、眼睛和舌头都很清晰可见。然而，背景略微模糊，不太清晰。
* 美感：9/10。照片的美感很好，野兔的侧面图像很动人，耳朵和眼睛很可爱。然而，背景略微过暗，可能是由于曝光不足导致的。


**总分：40/50**

**操作建议：**
1. **曝光改进**: 建议使用合适的曝光补偿，适当提高背景的曝光度以获得更明亮的背景。

这张照片很好，构图、曝光、色彩、细节和美感都很出色。然而，背景略微过暗，可能是由于曝光不足导致的。建议摄影师在下次拍摄时注意曝光和背景的设置。
</output_example1>

<output_example2>
**照片描述**

这幅照片呈现了一幅壮观的山脉景观，背景是温暖的夕阳，照亮了雪峰的顶端。雪峰的光芒照射下，山顶的雪崖和冰川闪闪发光，像是一颗璀璨的宝石。照片的主体是远处的雪峰，高耸入云，雪峰的顶端被夕阳的光芒照亮，形成一个金色的光环。下方的云层弥漫在山谷中，形成一片柔和的白色。照片的前景是一个静止的湖泊，反映了雪峰的倒影，形成一个完美的镜像效果。

**评分**

* 构图：25/25。照片的构图非常好，雪峰的主体位置很好，背景的云层和湖泊的前景都很自然地融入了整个场景。
* 曝光：5/5。照片的曝光非常好，雪峰的光照非常均匀，阴影和光照的对比很好。
* 色彩：5/5。照片的色彩非常丰富，雪峰的金色光环非常漂亮，云层的白色和湖泊的反映都很自然。
* 细节：5/5。照片的细节非常好，雪峰的纹理和云层的层次都很清晰。
* 美感：10/10。照片的美感非常强烈，雪峰的壮观景观和夕阳的光芒都让人感到非常震撼。

**总分：50/50**

**操作建议：**
1. **细节改进**: 稍微增加一些景物的层次感，例如增加一些树木或其他自然元素来丰富整个场景。

照片非常好，构图、曝光、色彩、细节和美感都非常出色。唯一的建议是，照片中可以稍微增加一些景物的层次感，例如增加一些树木或其他自然元素来丰富整个场景。
</output_example2>
<output_example3>
**图像描述**

这张照片显示了一张办公桌的局部视图，背景是混乱的办公室环境。主角是一台黑色维克斯的液晶显示器，显示着一段编程代码的文本编辑器。显示器下方的桌面上放置了一些电子设备，包括一个黑色手机、一个绿色水壶、一个白色水壶盖和一些杂乱的电缆。

图像中显示器占据了主要视觉焦点，桌面的其他元素围绕着它展开，形成了一个清晰的层次结构。然而，图像中一些元素的排列感觉不够谨慎，例如绿色水壶和白色水壶盖的位置感觉有些杂乱。

**评分**

* 构图：0/25。图像中内容杂乱，没有明确的主体，构图混乱。
* 曝光：3/5。照片的曝光正常，显示器和桌面上的元素都清晰可见。
* 色彩：3/5。照片的色彩非常自然，但是构图和细节方面有待改进。
* 细节：3/5。照片的细节正常，但是构图和色彩方面有待改进。
* 美感：0/10。照片缺乏美感，构图、色彩和细节方面有待改进。

**总分：9/50**

**操作建议：**
1. **构图改进**: 整理桌面，确定拍摄的焦点。
2. **细节改进**: 整理桌面，不要显得凌乱不堪。
3. **创意改进**: 整理桌面，选择你要拍摄的重点，围绕着这个重点进行思考。
4. **美感改进**: 整理桌面，选择你要拍摄的重点，围绕着这个重点进行美感的调整。

总体来说，这张照片的构图、美感和创意方面有待改进，建议摄影师在下次拍摄时注意构图和色彩的搭配，突出主题，增加一些视觉吸引力和创意元素。
</output_example3>
<output_example4>
**照片描述**

这张照片拍摄的是一位跑步者，穿着蓝色和白色的运动服，正在参加一场户外跑步活动。背景中可以看到其他跑步者和绿树成荫的环境，远处隐约可见城市的天际线。阳光明媚，树叶呈现出秋天的色彩，地面上有些许落叶。

**评分**

* 构图：18/25。主体明确，跑步者位于画面的中心位置，背景的树木和其他跑步者增加了层次感。但前景的灌木略显多余。
* 曝光：4/5。光线充足，主体和背景的曝光都很均匀，细节清晰可见。
* 色彩：4/5。色彩鲜明，蓝色和白色的运动服在绿色背景中很突出，整体色调自然。
* 细节：1/5。主体的细节表现良好，但背景略显杂乱，稍微影响了整体的清晰度。主体跑步者没有看向镜头，缺少情感表达。
* 美感：3/10。画面充满活力，阳光和自然环境增添了美感，主体跑步者没有看向镜头，缺少美感。

**总分：30/50**

**操作建议：**
1. **细节改进**: 注意捕捉主体角色的表情，没有看向镜头没有关系，但是应该有意义和情绪感染力，比如思考、快乐、痛苦等。

这张照片整体表现一般，构图和色彩都很出色，展现了运动的活力和户外的自然美景。建议在拍摄时注意捕捉主体角色的动作表情，更有情绪感染力。
</output_example4>
<output_example5>
**照片描述**

这张照片展示了一条河流的景色。河流的水面平静，水面上漂浮着一些落叶，显示出季节的变化。河岸两侧有绿化带，种植了树木和灌木，为画面增添了自然的美感。右侧的河岸边有一座建筑物，建筑物的设计现代，外墙有大块的玻璃窗，反射出天空和周围的景色。远处可以看到一些高楼大厦，显示出这是一个城市的环境。天空晴朗，云朵稀疏，阳光明媚，整个画面给人一种宁静和舒适的感觉。

**评分**

* 构图：10/25。照片的构图很好，河流的曲线引导视线，两侧的绿化带和建筑物形成了一个平衡的画面。然而，占据视觉主体的河流较为单调，缺少视觉焦点，构图不佳
* 曝光：4/5。照片的曝光良好，光线充足，细节清晰。然而，建筑物的玻璃窗反射出一些亮光，可能是因为光线过强导致的。
* 色彩：4/5。照片的色彩自然，河流的绿色和落叶的黄色形成了对比，增加了画面的层次感。然而，建筑物的玻璃窗反射出的亮光可能会影响色彩的平衡。
* 细节：4/5。照片的细节清晰，河流的纹理、落叶、树木和建筑物的细节都表现得很好。然而，建筑物的玻璃窗反射出的亮光可能会影响细节的表现。
* 美感：4/10。照片的构图影响了美感，缺少视觉焦点和情感表达，整体感觉较为平淡。

**总分：26/50**

**操作建议：**
1. **构图改进**: 河流占据比例过大，不符合黄金比例，容易让观看者失去焦点，建议减少河流比例至三分之一，露出更多天空和建筑的细节。
2. **美感改进**: 河流占据比例过大，不符合黄金比例，容易让观看者失去焦点，建议减少河流比例至三分之一。

这张照片整体表现不佳，构图和美感方面有待改进，建议摄影师在下次拍摄时注意构图的平衡和色彩的搭配，增加画面的层次感和视觉焦点。
</output_example5>
    `

    console.log('prompt:\n', prompt)

    // Call OpenAI API
    const response = await openai.chat.completions.create({
        
        model: process.env.OPENAI_API_MODEL || 'gpt-4o-mini',
        messages: [
            {
                role: "user",
                content: [
                    {
                        type: "text",
                        text: prompt,
                    },
                    {
                        type: "image_url",
                        image_url: {
                            url: `data:image/jpeg;base64,${base64Image}`
                        }
                    }
                ]
            }
        ],
        max_tokens: 1024,
        temperature: 0.1,
    });

    return response.choices[0].message.content;
}
